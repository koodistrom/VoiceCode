#JSGF V1.0;
/*TODO break java, other and app command tokens to own files*/
grammar javaKeyWords;

/* JAVA tokens*/

<basicType> = byte | short | char | int | long | float | double | boolean | string;

<modifier> = annotation | public | protected | private | static | abstract | final | native |
    synchronized | transient | volatile | strictfp;

<assignmentOperator> = equals;

<infixOperator> = is (less | greater);

<classDeclaration> = class | interface | enum;

<statement> = (if | for | while) statement;

<misc> = void | main;

/*other than java */

<number> = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
<numeric> = number <number>+ ;
<testVariable> = test | x | arguments;
<symbol> = braces | [corner] brackets | semi-colon | linechange;
<command> = undo;


/*main rule read by the app*/

public <words> = <classDeclaration> | <symbol> | <numeric> | <basicType> | <testVariable> |
        <assignmentOperator> | <modifier> | <statement> | <infixOperator> | <misc> | <command>;





/*work on progress:*/

/*public <def> = <modifier> <basicType>;*/


/*

abstract   continue   for          new         switch
assert     default    if           package     synchronized
boolean    do         goto         private     this
break      double     implements   protected   throw
byte       else       import       public      throws
case       enum       instanceof   return      transient
catch      extends    int          short       try
char       final      interface    static      void
class      finally    long         strictfp    volatile
const      float      native       super       while


AssignmentOperator:
    =
    +=
    -=
    *=
    /=
    &=
    |=
    ^=
    %=
    <<=
    >>=
    >>>=


InfixOp:
    ||
    &&
    |
    ^
    &
    ==
    !=
    <
    >
    <=
    >=
    <<
    >>
    >>>
    +
    -
    *
    /
    %

    PrefixOp:
        ++
        --
        !
        ~
        +
        -

    PostfixOp:
        ++
        --

*/